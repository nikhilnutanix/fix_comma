//
// Copyright (c) 2024 Nutanix Inc. All rights reserved.
//
// Author: divya.thakur@nutanix.com
//
// Ths file defined the  category keys and category values.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.3
// source: protos/categories.proto

package categoriesproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AbacCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uuid for the Category value
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Category name
	//
	// Deprecated: Marked as deprecated in protos/categories.proto.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Uuid of the category key, to which this value belongs to
	AbacCategoryKey string `protobuf:"bytes,3,opt,name=abac_category_key,json=abacCategoryKey,proto3" json:"abac_category_key,omitempty"`
	// Category value
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// Set if category is immutable. Defaults to false. For system categories, this is true
	Immutable bool `protobuf:"varint,5,opt,name=immutable,proto3" json:"immutable,omitempty"`
	// Create time in microseconds
	CreateTimeUsecs uint64 `protobuf:"fixed64,6,opt,name=create_time_usecs,json=createTimeUsecs,proto3" json:"create_time_usecs,omitempty"`
	// Last update time in microseconds
	LastUpdatedTimeUsecs uint64 `protobuf:"fixed64,7,opt,name=last_updated_time_usecs,json=lastUpdatedTimeUsecs,proto3" json:"last_updated_time_usecs,omitempty"`
	// Owner reference
	OwnerReference string `protobuf:"bytes,8,opt,name=owner_reference,json=ownerReference,proto3" json:"owner_reference,omitempty"`
	// Category description
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	// System category (internal). Defaults to false.
	Internal bool `protobuf:"varint,10,opt,name=internal,proto3" json:"internal,omitempty"`
	// Assignment rule uuid
	AssignmentRuleUuid string `protobuf:"bytes,11,opt,name=assignment_rule_uuid,json=assignmentRuleUuid,proto3" json:"assignment_rule_uuid,omitempty"`
	// User specified name
	UserSpecifiedName string `protobuf:"bytes,12,opt,name=user_specified_name,json=userSpecifiedName,proto3" json:"user_specified_name,omitempty"`
	// UUID of the user who created the category
	OwnerUuid string `protobuf:"bytes,13,opt,name=owner_uuid,json=ownerUuid,proto3" json:"owner_uuid,omitempty"`
}

func (x *AbacCategory) Reset() {
	*x = AbacCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_categories_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbacCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbacCategory) ProtoMessage() {}

func (x *AbacCategory) ProtoReflect() protoreflect.Message {
	mi := &file_protos_categories_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbacCategory.ProtoReflect.Descriptor instead.
func (*AbacCategory) Descriptor() ([]byte, []int) {
	return file_protos_categories_proto_rawDescGZIP(), []int{0}
}

func (x *AbacCategory) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// Deprecated: Marked as deprecated in protos/categories.proto.
func (x *AbacCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AbacCategory) GetAbacCategoryKey() string {
	if x != nil {
		return x.AbacCategoryKey
	}
	return ""
}

func (x *AbacCategory) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AbacCategory) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *AbacCategory) GetCreateTimeUsecs() uint64 {
	if x != nil {
		return x.CreateTimeUsecs
	}
	return 0
}

func (x *AbacCategory) GetLastUpdatedTimeUsecs() uint64 {
	if x != nil {
		return x.LastUpdatedTimeUsecs
	}
	return 0
}

func (x *AbacCategory) GetOwnerReference() string {
	if x != nil {
		return x.OwnerReference
	}
	return ""
}

func (x *AbacCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AbacCategory) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *AbacCategory) GetAssignmentRuleUuid() string {
	if x != nil {
		return x.AssignmentRuleUuid
	}
	return ""
}

func (x *AbacCategory) GetUserSpecifiedName() string {
	if x != nil {
		return x.UserSpecifiedName
	}
	return ""
}

func (x *AbacCategory) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

type AbacCategoryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uuid for the Category key
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Category name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Category key description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Set if category key is immutable. Defaults to false
	Immutable bool `protobuf:"varint,4,opt,name=immutable,proto3" json:"immutable,omitempty"`
	// System category (internal). Defaults to false
	Internal bool `protobuf:"varint,5,opt,name=internal,proto3" json:"internal,omitempty"`
	// Cardinality of the category key
	Cardinality uint64 `protobuf:"varint,6,opt,name=cardinality,proto3" json:"cardinality,omitempty"`
	// User specified name
	UserSpecifiedName string `protobuf:"bytes,7,opt,name=user_specified_name,json=userSpecifiedName,proto3" json:"user_specified_name,omitempty"`
	// UUID of the user who created the category
	OwnerUuid string `protobuf:"bytes,8,opt,name=owner_uuid,json=ownerUuid,proto3" json:"owner_uuid,omitempty"`
}

func (x *AbacCategoryKey) Reset() {
	*x = AbacCategoryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_categories_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbacCategoryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbacCategoryKey) ProtoMessage() {}

func (x *AbacCategoryKey) ProtoReflect() protoreflect.Message {
	mi := &file_protos_categories_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbacCategoryKey.ProtoReflect.Descriptor instead.
func (*AbacCategoryKey) Descriptor() ([]byte, []int) {
	return file_protos_categories_proto_rawDescGZIP(), []int{1}
}

func (x *AbacCategoryKey) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AbacCategoryKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AbacCategoryKey) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AbacCategoryKey) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *AbacCategoryKey) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *AbacCategoryKey) GetCardinality() uint64 {
	if x != nil {
		return x.Cardinality
	}
	return 0
}

func (x *AbacCategoryKey) GetUserSpecifiedName() string {
	if x != nil {
		return x.UserSpecifiedName
	}
	return ""
}

func (x *AbacCategoryKey) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

// Update the insights config when editing this message
type AbacEntityCapability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required - uuid for the EntityCapability entity.
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Required -  the kind of the entity e.g. vm, cluster, vm_disk etc.
	Kind string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	// Optional -  id of the kind
	KindId string `protobuf:"bytes,2,opt,name=kind_id,json=kindId,proto3" json:"kind_id,omitempty"`
}

func (x *AbacEntityCapability) Reset() {
	*x = AbacEntityCapability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_categories_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbacEntityCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbacEntityCapability) ProtoMessage() {}

func (x *AbacEntityCapability) ProtoReflect() protoreflect.Message {
	mi := &file_protos_categories_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbacEntityCapability.ProtoReflect.Descriptor instead.
func (*AbacEntityCapability) Descriptor() ([]byte, []int) {
	return file_protos_categories_proto_rawDescGZIP(), []int{2}
}

func (x *AbacEntityCapability) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AbacEntityCapability) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AbacEntityCapability) GetKindId() string {
	if x != nil {
		return x.KindId
	}
	return ""
}

var File_protos_categories_proto protoreflect.FileDescriptor

var file_protos_categories_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x22, 0xe5, 0x03, 0x0a, 0x0c, 0x41, 0x62, 0x61, 0x63, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x61, 0x62, 0x61, 0x63, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x62, 0x61, 0x63, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x63, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x63, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x63, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x0f, 0x41, 0x62, 0x61,
	0x63, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x22, 0x57, 0x0a, 0x14, 0x41, 0x62, 0x61, 0x63, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x69, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6b, 0x69, 0x6e, 0x64, 0x49, 0x64, 0x42, 0x15, 0x5a, 0x13, 0x72, 0x70,
	0x63, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_categories_proto_rawDescOnce sync.Once
	file_protos_categories_proto_rawDescData = file_protos_categories_proto_rawDesc
)

func file_protos_categories_proto_rawDescGZIP() []byte {
	file_protos_categories_proto_rawDescOnce.Do(func() {
		file_protos_categories_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_categories_proto_rawDescData)
	})
	return file_protos_categories_proto_rawDescData
}

var file_protos_categories_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_protos_categories_proto_goTypes = []any{
	(*AbacCategory)(nil),         // 0: categories.categories.AbacCategory
	(*AbacCategoryKey)(nil),      // 1: categories.categories.AbacCategoryKey
	(*AbacEntityCapability)(nil), // 2: categories.categories.AbacEntityCapability
}
var file_protos_categories_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_categories_proto_init() }
func file_protos_categories_proto_init() {
	if File_protos_categories_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_categories_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AbacCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_categories_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AbacCategoryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_categories_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AbacEntityCapability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_categories_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_categories_proto_goTypes,
		DependencyIndexes: file_protos_categories_proto_depIdxs,
		MessageInfos:      file_protos_categories_proto_msgTypes,
	}.Build()
	File_protos_categories_proto = out.File
	file_protos_categories_proto_rawDesc = nil
	file_protos_categories_proto_goTypes = nil
	file_protos_categories_proto_depIdxs = nil
}
